using System;

using Rhino;
using Rhino.Commands;
using Rhino.PlugIns;

using Rhino.Runtime.Code;
using Rhino.Runtime.Code.Platform;

namespace RhinoCodePlatform.Rhino3D.Projects.Plugin
{
  public class ProjectPlugin : PlugIn
  {
    static readonly Guid s_rhinocode = new Guid("c9cba87a-23ce-4f15-a918-97645c05cde7");
    static readonly PlatformSpec s_rhino = new PlatformSpec("mcneel.rhino3d.rhino");

    static readonly Guid s_projectId = new Guid("6da0feaa-7890-4dbc-83bf-5e88b064ea2c");
    static readonly string s_projectData = "";

    static bool s_initialized = false;
    static IProjectServer s_projectServer = default;
    static IProject s_project = default;

    public static void Initialize()
    {
      if (s_initialized)
        return;

      Rhino.PlugIns.PlugIn.LoadPlugIn(s_rhinocode);

      // get platforms registry into a dynamic type to avoid using
      // the actual registry type. Otherwise when underlying api changes
      // it will throw an exception.
      dynamic projectRegistry = RhinoCode.Platforms;
      // get project server
      s_projectServer = projectRegistry.QueryLatest(s_rhino)?.ProjectServer;
      if (s_projectServer is null)
      {
        RhinoApp.WriteLine($"Error loading plugin. Missing \"{s_rhino}\" platform");
        return;
      }

      // get project
      var dctx = new InvokeContext
      {
        Inputs =
        {
          ["projectAssembly"] = typeof(ProjectPlugin).Assembly,
          ["projectId"] = s_projectId,
          ["projectData"] = s_projectData,
        }
      };

      if (s_projectServer.TryInvoke("plugins/v1/deserialize", dctx)
            && dctx.Outputs.TryGet("project", out IProject project))
      {
        // server reports errors
        s_project = project;
      }

      s_initialized = true;
    }

    public static ProjectPlugin Instance { get; private set; }

    public static Rhino.Commands.Result RunCode(Command command, Guid id, RhinoDoc doc, RunMode mode)
    {
      if (s_project is null)
      {
        RhinoApp.WriteLine($"Error running command {id}. Project deserializiation failed.");
        return Rhino.Commands.Result.Failure;
      }

      var rctx = new InvokeContext
      {
        Inputs =
        {
          ["command"] = command,
          ["project"] = s_project,
          ["projectId"] = id,
          ["doc"] = doc,
          ["runMode"] = mode,
        }
      };

      if (s_projectServer.TryInvoke("plugins/v1/run", rctx))
        return Rhino.Commands.Result.Success;

      // server reports error
      else
        return Rhino.Commands.Result.Failure;
    }

    public ProjectPlugin() { Instance = this; }
  }
}
