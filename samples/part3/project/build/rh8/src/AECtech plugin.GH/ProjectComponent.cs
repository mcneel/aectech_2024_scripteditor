using System;
using SD = System.Drawing;

using Rhino.Geometry;

using Grasshopper.Kernel;

namespace RhinoCodePlatform.Rhino3D.Projects.Plugin.GH
{
  public sealed class ProjectComponent_39ac572d : GH_Component
  {
    readonly SD.Bitmap _icon = default;
    readonly string _scriptData = "ew0KICAidHlwZSI6ICJzY3JpcHQiLA0KICAic2NyaXB0Ijogew0KICAgICJsYW5ndWFnZSI6IHsNCiAgICAgICJpZCI6ICIqLiouY3NoYXJwIiwNCiAgICAgICJ2ZXJzaW9uIjogIjkuKi4qIg0KICAgIH0sDQogICAgInRpdGxlIjogIkJhdGNoUHJpbnRpbmciLA0KICAgICJ0ZXh0IjogIkx5OGdSM0poYzNOb2IzQndaWElnVTJOeWFYQjBJRWx1YzNSaGJtTmxEUW9qY21WbmFXOXVJRlZ6YVc1bmN3MEtkWE5wYm1jZ1UzbHpkR1Z0T3cwS2RYTnBibWNnVTNsemRHVnRMa052Ykd4bFkzUnBiMjV6T3cwS2RYTnBibWNnVTNsemRHVnRMa052Ykd4bFkzUnBiMjV6TGtkbGJtVnlhV003RFFwMWMybHVaeUJUZVhOMFpXMHVSSEpoZDJsdVp6c05DblZ6YVc1bklGTjVjM1JsYlM1SlR6c05DblZ6YVc1bklGTjVjM1JsYlM1TWFXNXhPdzBLRFFwMWMybHVaeUJTYUdsdWJ6c05DblZ6YVc1bklGSm9hVzV2TGtScGMzQnNZWGs3RFFwMWMybHVaeUJTYUdsdWJ5NUdhV3hsU1U4N0RRcDFjMmx1WnlCU2FHbHVieTVIWlc5dFpYUnllVHNOQ2cwS2RYTnBibWNnUjNKaGMzTm9iM0J3WlhJN0RRcDFjMmx1WnlCSGNtRnpjMmh2Y0hCbGNpNUxaWEp1Wld3N0RRcDFjMmx1WnlCSGNtRnpjMmh2Y0hCbGNpNUxaWEp1Wld3dVJHRjBZVHNOQ25WemFXNW5JRWR5WVhOemFHOXdjR1Z5TGt0bGNtNWxiQzVVZVhCbGN6c05DaU5sYm1SeVpXZHBiMjROQ2cwS2NIVmliR2xqSUdOc1lYTnpJRk5qY21sd2RGOUpibk4wWVc1alpTQTZJRWRJWDFOamNtbHdkRWx1YzNSaGJtTmxEUXA3RFFvZ0lDQWdJM0psWjJsdmJpQk9iM1JsY3cwS0lDQWdJQzhxSUEwS0lDQWdJQ0FnVFdWdFltVnljem9OQ2lBZ0lDQWdJQ0FnVW1ocGJtOUViMk1nVW1ocGJtOUViMk4xYldWdWRBMEtJQ0FnSUNBZ0lDQkhTRjlFYjJOMWJXVnVkQ0JIY21GemMyaHZjSEJsY2tSdlkzVnRaVzUwRFFvZ0lDQWdJQ0FnSUVsSFNGOURiMjF3YjI1bGJuUWdRMjl0Y0c5dVpXNTBEUW9nSUNBZ0lDQWdJR2x1ZENCSmRHVnlZWFJwYjI0TkNnMEtJQ0FnSUNBZ1RXVjBhRzlrY3lBb1ZtbHlkSFZoYkNBbUlHOTJaWEp5YVdSaFlteGxLVG9OQ2lBZ0lDQWdJQ0FnVUhKcGJuUW9jM1J5YVc1bklIUmxlSFFwRFFvZ0lDQWdJQ0FnSUZCeWFXNTBLSE4wY21sdVp5Qm1iM0p0WVhRc0lIQmhjbUZ0Y3lCdlltcGxZM1JiWFNCaGNtZHpLUTBLSUNBZ0lDQWdJQ0JTWldac1pXTjBLRzlpYW1WamRDQnZZbW9wRFFvZ0lDQWdJQ0FnSUZKbFpteGxZM1FvYjJKcVpXTjBJRzlpYWl3Z2MzUnlhVzVuSUcxbGRHaHZaRjl1WVcxbEtRMEtJQ0FnSUNvdkRRb2dJQ0FnSTJWdVpISmxaMmx2YmcwS0RRb2dJQ0FnY0hKcGRtRjBaU0IyYjJsa0lGSjFibE5qY21sd2RDZ3BEUW9nSUNBZ2V3MEtJQ0FnSUNBZ0lDQnpkSEpwYm1jZ2NHRjBhQ0E5SUhOMGNtbHVaeTVGYlhCMGVUc05DZzBLSUNBZ0lDQWdJQ0F2THlBeFlTNGdSMlYwSUhSb1pTQndZWFJvSUhSb2NuVWdkR2hsSUdOdmJXMWhibVFnYkdsdVpRMEtJQ0FnSUNBZ0lDQjJZWElnYzNWalkyVnpjeUE5SUZKb2FXNXZMa2x1Y0hWMExsSm9hVzV2UjJWMExrZGxkRk4wY21sdVp5Z2lVR3hsWVhObElITmxiR1ZqZENCMGFHVWdabTlzWkdWeUlIZG9aWEpsSUhsdmRYSWdabWxzWlhNZ2JHbDJaU0JwYmlJc0lHWmhiSE5sTENCeVpXWWdjR0YwYUNrN0RRb2dJQ0FnSUNBZ0lHbG1JQ2h6ZFdOalpYTnpJQ0U5SUZKb2FXNXZMa052YlcxaGJtUnpMbEpsYzNWc2RDNVRkV05qWlhOektRMEtJQ0FnSUNBZ0lDQjdEUW9nSUNBZ0lDQWdJQ0FnSUNCRGIyNXpiMnhsTGxkeWFYUmxUR2x1WlNnaVZHaGxjbVVnZDJGeklHRnVJR1Z5Y205eUlpazdEUW9nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3RFFvZ0lDQWdJQ0FnSUgwTkNnMEtJQ0FnSUNBZ0lDQXZMeUF4WWk0Z1IyVjBJSFJvWlNCd1lYUm9JSFZ6YVc1bklFVlVUeXdnWVNCamNtOXpjeTF3YkdGMFptOXliU0JWU1NCc2FXSnlZWEo1RFFvZ0lDQWdJQ0FnSUM4dklIWmhjaUJrYVdGc2IyY2dQU0J1WlhjZ1JYUnZMa1p2Y20xekxsTmxiR1ZqZEVadmJHUmxja1JwWVd4dlp5Z3BPdzBLSUNBZ0lDQWdJQ0F2THlCa2FXRnNiMmN1VkdsMGJHVWdQU0FpVUd4bFlYTmxJSE5sYkdWamRDQjBhR1VnWm05c1pHVnlJSGRvWlhKbElIbHZkWElnWm1sc1pYTWdiR2wyWlNCcGJpSTdEUW9OQ2lBZ0lDQWdJQ0FnTHk4Z2FXWWdLR1JwWVd4dlp5NVRhRzkzUkdsaGJHOW5LRzUxYkd3cElDRTlJRVYwYnk1R2IzSnRjeTVFYVdGc2IyZFNaWE4xYkhRdVQyc3BEUW9nSUNBZ0lDQWdJQzh2SUhzTkNpQWdJQ0FnSUNBZ0x5OGdJQ0FnSUVOdmJuTnZiR1V1VjNKcGRHVk1hVzVsS0NKVWFHVnlaU0IzWVhNZ1lXNGdaWEp5YjNJaUtUc05DaUFnSUNBZ0lDQWdMeThnSUNBZ0lISmxkSFZ5YmpzTkNpQWdJQ0FnSUNBZ0x5OGdmUTBLSUNBZ0lDQWdJQ0F2TDNCaGRHZ2dQU0JrYVdGc2IyY3VSR2x5WldOMGIzSjVPdzBLRFFvZ0lDQWdJQ0FnSUVOdmJuTnZiR1V1VjNKcGRHVk1hVzVsS0NRaVVISnBiblJwYm1jZ1puSnZiU0I3Y0dGMGFIMGhJU0lwT3cwS0RRb2dJQ0FnSUNBZ0lDOHZJREl1SUVkbGRIUnBibWNnZEdobElHWnBiR1Z6SUdaeWIyMGdkR2hsSUhCeWIzWnBaR1ZrSUhCaGRHZ05DaUFnSUNBZ0lDQWdkbUZ5SUdGc2JFWnBiR1Z6SUQwZ1JHbHlaV04wYjNKNUxrZGxkRVpwYkdWektIQmhkR2dwTGxSdlRHbHpkQ2dwT3cwS0lDQWdJQ0FnSUNCMllYSWdabWxzWlhNZ1BTQmhiR3hHYVd4bGN5NVhhR1Z5WlNobUlEMFx1MDAyQklHWXVSVzVrYzFkcGRHZ29JaTR6WkcwaUtTa3VWRzlNYVhOMEtDazdEUW9OQ2lBZ0lDQWdJQ0FnUTI5dWMyOXNaUzVYY21sMFpVeHBibVVvSkNKT2RXMWlaWElnYjJZZ1ptOTFibVFnWm1sc1pYTTZJSHRoYkd4R2FXeGxjeTVEYjNWdWRIMGhJU0lwT3cwS0lDQWdJQ0FnSUNCRGIyNXpiMnhsTGxkeWFYUmxUR2x1WlNna0lrNTFiV0psY2lCdlppQm1hV3hsY3lCMGJ5QndjbWx1ZERvZ2UyWnBiR1Z6TGtOdmRXNTBmU0VoSWlrN0RRb05DaUFnSUNBZ0lDQWdMeThnTXk0Z1IyVjBkR2x1WnlCMGFHVWdZMjl0Y0d4bGRHVWdabWxzWlNCdVlXMWxjeUJoYm1RZ2RHaGxJR1Y0Y0c5eWRDQnVZVzFsY3cwS0lDQWdJQ0FnSUNCMllYSWdaR1Z6ZEdsdVlYUnBiMjV6SUQwZ1ptbHNaWE11VTJWc1pXTjBLSGdnUFQ0Z1VHRjBhQzVEYjIxaWFXNWxLSEJoZEdnc0lIZ3BLUzVVYjB4cGMzUW9LVHNOQ2lBZ0lDQWdJQ0FnZG1GeUlHVjRjRzl5ZEU1aGJXVnpJRDBnWkdWemRHbHVZWFJwYjI1ekxsTmxiR1ZqZENoNElEMFx1MDAyQklIZ3VVbVZ3YkdGalpTZ2lMak5rYlNJc0lDSXVjR1JtSWlrcExsUnZUR2x6ZENncE93MEtEUW9nSUNBZ0lDQWdJQzh2SURRdUlGQnlhVzUwYVc1bklHRnNiQ0JTYUdsdWJ5Qm1hV3hsY3cwS0lDQWdJQ0FnSUNCbWIzSWdLR2x1ZENCcElEMGdNRHNnYVNBOElHUmxjM1JwYm1GMGFXOXVjeTVEYjNWdWREc2dhU3NyS1EwS0lDQWdJQ0FnSUNCN0RRb05DaUFnSUNBZ0lDQWdJQ0FnSUM4dklEUXVNU0JUWlhSMGFXNW5JSFJvWlNCdGIyUnBabWxsWkNCbWJHRm5JSFJ2SUdaaGJITmxJSFJ2SUdGMmIybGtJSFJvWlNCamIyMXRZVzVrSUhGMVpYTjBhVzl1SUdGaWIzVjBJSE5oZG1sdVp5QjBhR1VnWm1sc1pRMEtJQ0FnSUNBZ0lDQWdJQ0FnVW1ocGJtOUViMk11UVdOMGFYWmxSRzlqTGsxdlpHbG1hV1ZrSUQwZ1ptRnNjMlU3RFFvTkNpQWdJQ0FnSUNBZ0lDQWdJQzh2SURRdU1pQkRjbVZoZEdsdVp5QmhibVFnY25WdWJtbHVaeUIwYUdVZ2IzQmxibWx1WnlCelkzSnBjSFFOQ2lBZ0lDQWdJQ0FnSUNBZ0lITjBjbWx1WnlCelkzSnBjSFFnUFNCemRISnBibWN1Um05eWJXRjBLQ0pmTFU5d1pXNGdYQ0o3TUgxY0lpSXNJR1JsYzNScGJtRjBhVzl1YzF0cFhTazdEUW9nSUNBZ0lDQWdJQ0FnSUNCU2FHbHViMEZ3Y0M1U2RXNVRZM0pwY0hRb2MyTnlhWEIwTENCbVlXeHpaU2s3RFFvTkNpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCamRYSnlaVzUwUkc5aklEMGdVbWhwYm05RWIyTXVRV04wYVhabFJHOWpPdzBLRFFvZ0lDQWdJQ0FnSUNBZ0lDQXZMeUEwTGpNZ1EzSmxZWFJwYm1jZ1lTQmliR0Z1YXlCd1pHWWdabWxzWlNCMGJ5QnpkRzl5WlNCaGJHd2diR0Y1YjNWMGN5Qm1jbTl0SUhSb1pTQlNhR2x1YnlCbWFXeGxEUW9nSUNBZ0lDQWdJQ0FnSUNCMllYSWdjR1JtSUQwZ1JtbHNaVkJrWmk1RGNtVmhkR1VvS1RzTkNpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCa2NHa2dQU0EyTURBN0RRb05DaUFnSUNBZ0lDQWdJQ0FnSUM4dklEUXVOQ0JKZEdWeVlYUnBibWNnWVd4c0lHeGhlVzkxZEhNZ1lXNWtJR052Ym1acFozVnlhVzVuSUhObGRIUnBibWR6SUhSdklHVjRjRzl5ZENCMGJ5QndaR1lOQ2lBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJ3WVdkbGN5QTlJR04xY25KbGJuUkViMk11Vm1sbGQzTXVSMlYwVUdGblpWWnBaWGR6S0NrN0RRb2dJQ0FnSUNBZ0lDQWdJQ0JtYjNKbFlXTm9JQ2hTYUdsdWIxQmhaMlZXYVdWM0lIQmhaMlVnYVc0Z2NHRm5aWE1wRFFvZ0lDQWdJQ0FnSUNBZ0lDQjdEUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdOaGNIUjFjbVVnUFNCdVpYY2dWbWxsZDBOaGNIUjFjbVZUWlhSMGFXNW5jeWh3WVdkbExDQmtjR2twT3cwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGNIUjFjbVV1VDNWMGNIVjBRMjlzYjNJZ1BTQXdPdzBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oY0hSMWNtVXVWR1Y0ZEVSdmRGQnZhVzUwVTJsNlpTQTlJRGd1TURzTkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYQjBkWEpsTGtSbFptRjFiSFJRY21sdWRGZHBaSFJvVFdsc2JHbHRaWFJsY25NZ1BTQXdMakk3RFFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0dSbUxrRmtaRkJoWjJVb1kyRndkSFZ5WlNrN0RRb2dJQ0FnSUNBZ0lDQWdJQ0I5RFFvTkNpQWdJQ0FnSUNBZ0lDQWdJQzh2SURRdU5TQlRZWFpwYm1jZ2IzVnlJRzVsZHlCd1pHWWdabWxzWlEwS0lDQWdJQ0FnSUNBZ0lDQWdjR1JtTGxkeWFYUmxLR1Y0Y0c5eWRFNWhiV1Z6VzJsZEtUc05DaUFnSUNBZ0lDQWdmUTBLSUNBZ0lIME5DbjBOQ2c9PSIsDQogICAgInVyaSI6ICJyaGlub2NvZGU6Ly8vZ3Jhc3Nob3BwZXIvMS8zOWFjNTcyZC0yNTM2LTRiMjctYjBjYy1kOWNmZjBiMTA1ODMvIiwNCiAgICAiaWQiOiAiMzlhYzU3MmQtMjUzNi00YjI3LWIwY2MtZDljZmYwYjEwNTgzIiwNCiAgICAibmlja25hbWUiOiAiQlAiLA0KICAgICJkZXNjcmlwdGlvbiI6ICJQZXJmb3JtIGEgcHJpbnRpbmcgb3BlcmF0aW9uIG92ZXIgZGlmZmVyZW50IGZpbGVzIiwNCiAgICAiZ3JvdXAiOiAiQmF0Y2hPcHMiLA0KICAgICJpbnB1dHMiOiBbXQ0KICB9DQp9";
    readonly dynamic _script;

    public override Guid ComponentGuid { get; } = new Guid("39ac572d-2536-4b27-b0cc-d9cff0b10583");

    public override GH_Exposure Exposure { get; } = GH_Exposure.primary;

    public override bool Obsolete { get; } = false;

    protected override SD.Bitmap Icon => _icon;

    public ProjectComponent_39ac572d() : base(
        name: "BatchPrinting",
        nickname: "BP",
        description: "Perform a printing operation over different files",
        category: "AECtech plugin",
        subCategory: "BatchOps"
        )
    {
      bool success = ProjectComponentPlugin.TryCreateScript(this, _scriptData, out _script);
      if (success)
      {
        ProjectComponentPlugin.TryCreateScriptIcon(_script, out _icon);
      }
      else
      {
        AddRuntimeMessage(GH_RuntimeMessageLevel.Error, "Scripting platform is not ready.");
      }
    }

    protected override void RegisterInputParams(GH_InputParamManager _) { }

    protected override void RegisterOutputParams(GH_OutputParamManager _) { }

    protected override void BeforeSolveInstance()
    {
      if (_script is null) return;
      _script.BeforeSolve(this);
    }

    protected override void SolveInstance(IGH_DataAccess DA)
    {
      if (_script is null) return;
      _script.Solve(this, DA);
    }

    protected override void AfterSolveInstance()
    {
      if (_script is null) return;
      _script.AfterSolve(this);
    }

    public override void RemovedFromDocument(GH_Document document)
    {
      ProjectComponentPlugin.DisposeScript(this, _script);
      base.RemovedFromDocument(document);
    }

    public override BoundingBox ClippingBox
    {
      get
      {
        if (_script is null) return BoundingBox.Empty;
        return _script.GetClipBox(this);
      }
    }

    public override void DrawViewportWires(IGH_PreviewArgs args)
    {
      if (_script is null) return;
      _script.DrawWires(this, args);
    }

    public override void DrawViewportMeshes(IGH_PreviewArgs args)
    {
      if (_script is null) return;
      _script.DrawMeshes(this, args);
    }
  }
}
